name: Merge Schedule
on:
  pull_request:
    types: [opened, edited, synchronize]
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch: # For manual testing
jobs:
  merge_schedule:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate rebase
      - name: Update PR branch
        run: |
          # Get the PR number from the GitHub event
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          if [ -n "$PR_NUMBER" ]; then
            # Get the PR's branch name
            PR_BRANCH=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" | \
              jq --raw-output .head.ref)
            # Update the PR branch with the target branch (assuming 'main')
            git checkout "$PR_BRANCH"
            git pull origin main --rebase
            git push origin "$PR_BRANCH" --force
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run merge schedule action
        uses: gr2m/merge-schedule-action@v2
        with:
          merge_method: rebase # Recommended for cleaner conflict resolution
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
